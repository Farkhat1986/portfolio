{"version":3,"sources":["index.js"],"names":["mod","model","app","PORT","process","env","HOST","use","express","json","rootRouter","errorHandler","start","sequelize","authenticate","sync","listen","console","log"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,KAAZ;AACA;AACA;;AACA,IAAMC,GAAG,GAAG,0BAAZ;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,IAAI,GAAGF,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,WAAjC;AAEAJ,GAAG,CAACK,GAAJ,CAAQ,uBAAR;AACAL,GAAG,CAACK,GAAJ,CAAQC,oBAAQC,IAAR,EAAR;AACAP,GAAG,CAACK,GAAJ,CAAQC,8BAAe,mBAAQ,QAAR,CAAf,CAAR;AACAN,GAAG,CAACK,GAAJ,CAAQ,oCAAR;AACAL,GAAG,CAACK,GAAJ,CAAQ,MAAR,EAAgBG,iBAAhB;AAEA;;AACAR,GAAG,CAACK,GAAJ,CAAQI,qCAAR;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEAC,oBAAUC,YAAV,EAFA;;AAAA;AAAA;AAAA,0CAGAD,oBAAUE,IAAV,EAHA;;AAAA;AAINb,UAAAA,GAAG,CAACc,MAAJ,CAAWb,IAAX,EAAiBG,IAAjB,EAAuB;AAAA,mBAAMW,OAAO,CAACC,GAAR,kCAAsCZ,IAAtC,cAA8CH,IAA9C,EAAN;AAAA,WAAvB;AAJM;AAAA;;AAAA;AAAA;AAAA;AAMNc,UAAAA,OAAO,CAACC,GAAR;;AANM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;AAUAN,KAAK","sourcesContent":["import express from 'express';\r\nimport { config } from 'dotenv';\r\nimport { sequelize } from './model/database.js';\r\nimport * as model from './model/model.js';\r\nimport cors from 'cors';\r\nimport { rootRouter } from './routes/index.js';\r\nimport { errorHandler } from './middlewware/ErrorHandlingMiddleware.js'\r\nimport fileUpload from 'express-fileupload'\r\nimport { resolve } from 'path'\r\n\r\nconst mod = model;\r\nconfig();\r\n/** Инициализация сервера. */\r\nconst app = express();\r\n\r\nconst PORT = process.env.PORT || 3333;\r\nconst HOST = process.env.HOST || 'localhost';\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(express.static(resolve('static')))\r\napp.use(fileUpload());\r\napp.use('/api', rootRouter);\r\n\r\n/** Обработка ошибок (последним). */\r\napp.use(errorHandler);\r\n\r\nconst start = async () => {\r\n    try {\r\n        await sequelize.authenticate();\r\n        await sequelize.sync();\r\n        app.listen(PORT, HOST, () => console.log(`Server started: http://${HOST}:${PORT}`));\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nstart();\r\n\r\n"],"file":"index.dev.js"}