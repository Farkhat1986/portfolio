"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var _express=_interopRequireDefault(require("express")),_dotenv=require("dotenv"),_database=require("./model/database.js"),model=_interopRequireWildcard(require("./model/model.js")),_cors=_interopRequireDefault(require("cors")),_index=require("./routes/index.js"),_ErrorHandlingMiddleware=require("./middlewware/ErrorHandlingMiddleware.js"),_expressFileupload=_interopRequireDefault(require("express-fileupload")),_path=require("path");function _getRequireWildcardCache(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return _getRequireWildcardCache=function(){return e},e}function _interopRequireWildcard(e){if(e&&e.__esModule)return e;if(null===e||"object"!==_typeof(e)&&"function"!=typeof e)return{default:e};var r=_getRequireWildcardCache();if(r&&r.has(e))return r.get(e);var t={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var o=n?Object.getOwnPropertyDescriptor(e,a):null;o&&(o.get||o.set)?Object.defineProperty(t,a,o):t[a]=e[a]}return t.default=e,r&&r.set(e,t),t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var mod=model;(0,_dotenv.config)();var app=(0,_express.default)(),PORT=process.env.PORT||3333,HOST=process.env.HOST||"localhost";app.use((0,_cors.default)()),app.use(_express.default.json()),app.use(_express.default.static((0,_path.resolve)("static"))),app.use((0,_expressFileupload.default)()),app.use("/api",_index.rootRouter),app.use(_ErrorHandlingMiddleware.errorHandler);var start=function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(_database.sequelize.authenticate());case 3:return e.next=5,regeneratorRuntime.awrap(_database.sequelize.sync());case 5:app.listen(PORT,HOST,function(){return console.log("Server started: http://".concat(HOST,":").concat(PORT))}),e.next=11;break;case 8:e.prev=8,e.t0=e.catch(0),console.log(e.t0);case 11:case"end":return e.stop()}},null,null,[[0,8]])};start();
//# sourceMappingURL=index.min.js.map
