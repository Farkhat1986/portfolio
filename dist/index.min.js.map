{"version":3,"sources":["index.js"],"names":["_express","_interopRequireDefault","require","_dotenv","_database","model","_interopRequireWildcard","_cors","_index","_ErrorHandlingMiddleware","_expressFileupload","_path","mod","config","app","PORT","process","env","HOST","use","express","json","resolve","rootRouter","errorHandler","start","regeneratorRuntime","async","_context","prev","next","awrap","sequelize","authenticate","sync","listen","console","log","concat","t0","stop"],"mappings":"8PAAA,IAAAA,SAAAC,uBAAAC,QAAA,YACAC,QAAAD,QAAA,UACAE,UAAAF,QAAA,uBACAG,MAAAC,wBAAAJ,QAAA,qBAHAK,MAAAN,uBAAAC,QAAA,SAKAM,OAAAN,QAAA,qBAJAO,yBAAAP,QAAA,4CAMAQ,mBAAAT,uBAAAC,QAAA,uBALAS,MAAAT,QAAA,+rBACA,IAAAU,IAAAP,OAQA,EAAAF,QAAAU,UAEA,IAAMC,KAAM,EAAAd,SAAA,WAENe,KAAOC,QAAQC,IAAIF,MAAQ,KATjCG,KAAAF,QAAAC,IAAAC,MAAA,YACAJ,IAAAK,KAAA,EAAAZ,MAAA,YAYAO,IAAIK,IAAIC,SAAAA,QAAQC,QAXhBP,IAAAK,IAAAC,SAAAA,QAAAA,QAAA,EAAAT,MAAAW,SAAA,YAaAR,IAAIK,KAAI,EAAAT,mBAAA,YACRI,IAAIK,IAAI,OAAQI,OAAAA,YAGhBT,IAAIK,IAAIK,yBAAAA,cAER,IAAMC,MAAQ,WAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAhBdC,UAAAA,UAAAC,gBAgBc,KAAA,EAAA,OAAAL,EAAAE,KAAA,EAAAJ,mBAAAK,MAfdC,UAAAA,UAAAE,QAec,KAAA,EAINpB,IAAIqB,OAAOpB,KAAMG,KAAM,WAAA,OAAMkB,QAAQC,IAAR,0BAAAC,OAAsCpB,KAAtC,KAAAoB,OAA8CvB,SAJrEa,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,MAAA,GAZJQ,QAAGpB,IAAHY,EAAAW,IAYI,KAAA,GAAA,IAAA,MAAA,OAAAX,EAAAY,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAPd1B","file":"index.min.js","sourcesContent":["import express from 'express';\r\nimport { config } from 'dotenv';\r\nimport { sequelize } from './model/database.js';\r\nimport * as model from './model/model.js';\r\nimport cors from 'cors';\r\nimport { rootRouter } from './routes/index.js';\r\nimport { errorHandler } from './middlewware/ErrorHandlingMiddleware.js'\r\nimport fileUpload from 'express-fileupload'\r\nimport { resolve } from 'path'\r\n\r\nconst mod = model;\r\nconfig();\r\n/** Инициализация сервера. */\r\nconst app = express();\r\n\r\nconst PORT = process.env.PORT || 3333;\r\nconst HOST = process.env.HOST || 'localhost';\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\napp.use(express.static(resolve('static')))\r\napp.use(fileUpload());\r\napp.use('/api', rootRouter);\r\n\r\n/** Обработка ошибок (последним). */\r\napp.use(errorHandler);\r\n\r\nconst start = async () => {\r\n    try {\r\n        await sequelize.authenticate();\r\n        await sequelize.sync();\r\n        app.listen(PORT, HOST, () => console.log(`Server started: http://${HOST}:${PORT}`));\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nstart();\r\n\r\n"]}