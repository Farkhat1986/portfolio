{"version":3,"sources":["programController.js"],"names":["_model","require","_uuid","_path","_ApiError","ProgramController","req","res","next","body","name","description","price","categoriesId","tehnoId","image","files","fileName","v4","mv","resolve","dirname","Program","create","program","json","ApiError","badRequest","_context","t0","message","query","limit","page","offset","findAndCountAll","where","params","id","programController"],"mappings":"qGAAA,IAAAA,OAAAC,QAAA,qBACAC,MAAAD,QAAA,QACAE,MAAAF,QAAA,QACAG,UAAAH,QAAA,kaAEMI,sHALNC,EAAAC,EAAAC,2HACAF,EAAAG,KAAAC,IAAAA,KAAAC,IAAAA,YAAAC,IAAAA,MAAAC,IAAAA,aAAAC,IAAAA,QASoBC,EAAUT,EAAIU,MAAdD,MARpBE,GAAA,EAAAf,MAAAgB,MAAA,OAUYH,EAAMI,IAAG,EAAAhB,MAAAiB,UAAQ,EAAAjB,MAAAiB,UAAQ,EAAAjB,MAAAkB,SAAQ,KAAM,SAAUJ,sCAT7DK,OAAAA,QAAAC,OAAA,CAAAb,KAAAA,EAAAC,YAAAA,EAAAC,MAAAA,EAAAC,aAAAA,EAAAC,QAAAA,EAAAC,MAAAE,mBAAAO,2BAWmBjB,EAAIkB,KAAKD,+DAEThB,EAAKkB,UAAAA,SAASC,WAAWC,EAAAC,GAAEC,kGAXxCzB,EAgBgBE,0GAC+BD,EAAIyB,MAA3ClB,IAAAA,aAAcC,IAAAA,QAASkB,IAAAA,MAAOC,IAAAA,KAGhCC,GAFJD,EAAOA,GAAQ,IACfD,EAAQA,GAAS,IACWA,EAEvBnB,GAAiBC,2DACFQ,OAAAA,QAAQa,0BAAxBX,oBAECX,GAvBIP,4CAwBWgB,OAAAA,QAAQa,gBAAgB,CAAEC,MAAO,CAACtB,QAAAA,GAAUkB,MAAAA,EAAOE,OAAAA,6BAAnEV,oBAEAX,IAAiBC,4CACDQ,OAAAA,QAAQa,gBAAgB,CAAEC,MAAO,CAACvB,aAAAA,GAAemB,MAAAA,EAAOE,OAAAA,6BAAxEV,oBAEAX,GAAgBC,4CACAQ,OAAAA,QAAQa,gBAAgB,CAAEC,MAAO,CAACvB,aAAAA,EAAcC,QAAAA,GAAUkB,MAAAA,EAAOE,OAAAA,6BAAjFV,0CA3BQT,EA6BDU,KA7BWnB,wEAiCbA,EAAKC,kGA9B6BG,EAAAA,EAAF2B,OAAE3B,qCAAMC,OAAAA,QAAAA,QAAR,CAAAyB,MAAA,CAAAE,GAAAA,oBAAQ3B,2BAAaC,EAAAA,KAAAA,iDAsChE2B,kBAAoB,IAAIlC","file":"programController.min.js","sourcesContent":["import { Program } from '../model/model.js'\r\nimport { v4 } from 'uuid'\r\nimport { resolve, dirname } from 'path'\r\nimport { ApiError } from '../error/ApiError.js'\r\n\r\nclass ProgramController {\r\n  \r\n    async create(req, res, next) {\r\n        try {\r\n            const { name, description, price, categoriesId, tehnoId} = req.body;\r\n            const { image } = req.files;\r\n            let fileName = v4() + '.jpg';\r\n            image.mv(resolve(resolve(dirname('')), 'static', fileName))\r\n            const program = await Program.create({ name, description, price, categoriesId, tehnoId, image: fileName })\r\n            return res.json(program);\r\n        } catch(e) {\r\n            return next(ApiError.badRequest(e.message))\r\n        }\r\n    }\r\n\r\n  \r\n    async getAll(req, res) {\r\n        let { categoriesId, tehnoId, limit, page } = req.query;\r\n        page = page || 1;\r\n        limit = limit || 10;\r\n        let offset = page * limit - limit;\r\n        let program;\r\n        if (!categoriesId && !tehnoId) {\r\n            program = await Program.findAndCountAll()\r\n        }\r\n        if (!categoriesId && tehnoId) {\r\n            program = await Program.findAndCountAll({ where: {tehnoId}, limit, offset})\r\n        }\r\n        if (categoriesId && !tehnoId) {\r\n            program = await Program.findAndCountAll({ where: {categoriesId}, limit, offset})\r\n        }\r\n        if (categoriesId && tehnoId) {\r\n            program = await Program.findAndCountAll({ where: {categoriesId, tehnoId}, limit, offset})\r\n        }\r\n        return res.json(program);\r\n    }\r\n\r\n    \r\n    async getOne(req, res) {\r\n        const { id } = req.params\r\n        const program = await Program.findOne({ where: {id}});\r\n        return res.json(program)\r\n    }\r\n\r\n}\r\n\r\nconst programController = new ProgramController()\r\nexport { programController };"]}